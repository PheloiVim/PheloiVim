return {
  "nvim-treesitter/nvim-treesitter",
  event = { "BufReadPost", "BufNewFile", "BufWritePost", "VeryLazy" },
  dependencies = {
    "nvim-treesitter/nvim-treesitter-textobjects",
    { "windwp/nvim-ts-autotag", opts = { enable_close_on_slash = false } },
  },
  cmd = {
    "TSBufDisable",
    "TSBufEnable",
    "TSBufToggle",
    "TSDisable",
    "TSEnable",
    "TSToggle",
    "TSInstall",
    "TSInstallInfo",
    "TSInstallSync",
    "TSModuleInfo",
    "TSUninstall",
    "TSUpdate",
    "TSUpdateSync",
  },
  build = ":TSUpdate",
  opts = {
    highlight = { enable = true },
    autotag = { enable = true },
    incremental_selection = {
      enable = true,
      keymaps = {
        init_selection = "<C-space>",
        node_incremental = "<C-space>",
        scope_incremental = false,
        node_decremental = "<bs>",
      },
    },

    indent = {
      enable = true,
      disable = function(_, bufnr) return vim.b[bufnr].large_buf end,
    },

    textobjects = {
      select = {
        enable = true,
        lookahead = true,
        keymaps = {
          ["ak"] = { query = "@block.outer", desc = "around block" },
          ["ik"] = { query = "@block.inner", desc = "inside block" },
          ["ac"] = { query = "@class.outer", desc = "around class" },
          ["ic"] = { query = "@class.inner", desc = "inside class" },
          ["a?"] = { query = "@conditional.outer", desc = "around conditional" },
          ["i?"] = { query = "@conditional.inner", desc = "inside conditional" },
          ["af"] = { query = "@function.outer", desc = "around function " },
          ["if"] = { query = "@function.inner", desc = "inside function " },
          ["al"] = { query = "@loop.outer", desc = "around loop" },
          ["il"] = { query = "@loop.inner", desc = "inside loop" },
          ["aa"] = { query = "@parameter.outer", desc = "around argument" },
          ["ia"] = { query = "@parameter.inner", desc = "inside argument" },
        },
      },
      move = {
        enable = true,
        goto_next_start = {
          ["]f"] = "@function.outer",
          ["]c"] = "@class.outer",
        },
        goto_next_end = {
          ["]F"] = "@function.outer",
          ["]C"] = "@class.outer",
        },
        goto_previous_start = {
          ["[f"] = "@function.outer",
          ["[c"] = "@class.outer",
        },
        goto_previous_end = {
          ["[F"] = "@function.outer",
          ["[C"] = "@class.outer",
        },
      },
    },
    ensure_installed = {
      "astro",
      "css",
      "go",
      "html",
      "javascript",
      "typescript",
      "scss",
      "toml",
      "tsx",
      "jsdoc",
      "json",
      "diff",
      "bash",
      "c",
      "markdown",
      "markdown_inline",
      "query",
      "lua",
      "luadoc",
      "luap",
      "regex",
      "vim",
      "vimdoc",
      "rust",
      "cpp",
      "dockerfile",
      "gomod",
      "gowork",
      "gosum",
      "json5",
      "jsonc",
      "c_sharp",
      "terraform",
      "hcl",
    },
  },
  config = function(_, opts) require("nvim-treesitter.configs").setup(opts) end,
}
